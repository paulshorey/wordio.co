{
  "name": "wordio-co",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev -p 3001",
    "serve": "npm run build && next start -p 3001",
    "build": "next build",
    "analyze": "cross-env ANALYZE=true next build",
    "analyze:server": "cross-env BUNDLE_ANALYZE=server next build",
    "analyze:browser": "cross-env BUNDLE_ANALYZE=browser next build",
    "---------------- shortcuts: ---------------": "",
    "start": "npm run dev",
    "---------------- helpers: ---------------": "",
    "build:css": "rm -rf public/css && parcel build assets/css/* && mv dist public/css"
  },
  "dependencies": {
    "@fortawesome/fontawesome-svg-core": "^1.2.32",
    "@fortawesome/pro-light-svg-icons": "^5.15.1",
    "@fortawesome/pro-regular-svg-icons": "^5.15.1",
    "@fortawesome/pro-solid-svg-icons": "^5.15.1",
    "@fortawesome/react-fontawesome": "^0.1.14",
    "@next/bundle-analyzer": "^10.0.4",
    "@twodashes/browser": "^0.4.7",
    "@twodashes/node": "^0.4.7",
    "@twodashes/universal": "^0.4.7",
    "antd": "^4.0.3",
    "axios": "^0.19.2",
    "cross-env": "^7.0.3",
    "level": "^6.0.1",
    "next": "10.0.0",
    "pure-react-carousel": "^1.27.6",
    "react": "17.0.1",
    "react-dom": "17.0.1",
    "react-redux": "^7.1.3",
    "redux": "^4.0.4",
    "redux-devtools-extension": "^2.13.8",
    "redux-thunk": "^2.3.0",
    "sass": "^1.30.0",
    "styled-components": "^5.2.1",
    "typeface-quicksand": "^1.1.4"
  },
  "devDependencies": {
    "babel-plugin-styled-components": "^1.12.0",
    "babel-plugin-transform-imports": "^2.0.0"
  },
  "oldScripts": {
    "start": "npm run dev:dev",
    "save": "git add . && git commit -m 'nlp-fe autosave' && git push",
    "pub": "rm -rf ../public/nlp-fe && mv ./public ../public/nlp-fe && cd ./../public && git add . && git commit -m 'nlp-fe autosave' && git push",
    "dev": "npm run dev:dev",
    "dev:dev": "npm run ip_local && NODE_ENV=development gatsby develop",
    "dev:stage": "npm run ip_stage && NODE_ENV=development gatsby develop",
    "dev:production": "NODE_ENV=production gatsby develop",
    "build": "npm run build:production",
    "build:dev": "rm -rf ./build_dev && npm run ip_local && NODE_ENV=development gatsby build && mv ./public ./build_dev",
    "build:stage": "rm -rf ./build_stage && npm run ip_stage && NODE_ENV=development gatsby build && mv ./public ./build_stage",
    "build:production": "NODE_ENV=production gatsby build",
    "serve": "npm run serve:production",
    "serve:dev": "echo \"serving dev @ localhost:8000\" && http-server build_stage -p 8000",
    "serve:stage": "echo \"serving stage @ http://$(ipconfig getifaddr en0):9000\" && http-server build_stage -p 9000",
    "serve:production": "echo \"serving production @ port 9000\" && http-server build_stage -p 9000",
    "#######": "#",
    "# etc #": "#",
    "######!": "#",
    "pull": "git add . && rm package-lock.json && git reset --hard HEAD && git pull",
    "ip_stage": "echo \"\nDEV_PUBLIC_API_HOST = '$(ipconfig getifaddr en0):1090'\nDEV_ADMIN_API_HOST = '$(ipconfig getifaddr en0):1090'\" >> .env.development",
    "ip_local": "echo \"\nDEV_PUBLIC_API_HOST = '127.0.0.1:1080'\nDEV_ADMIN_API_HOST = '127.0.0.1:1080'\" >> .env.development",
    "lint": "eslint --ext .js,.jsx --ignore-pattern public .",
    "test": "echo \"Error: no test specified\" && exit 1",
    "format": "prettier --trailing-comma es5 --no-semi --single-quote --write 'src/**/*.js' 'src/**/*.md' 'bin/*.js'",
    "deploy": "gatsby build --prefix-paths && gh-pages -d public",
    "fix-semi": "eslint --quiet --ignore-pattern node_modules --ignore-pattern public --parser babel-eslint --no-eslintrc --rule '{\"semi\": [2, \"never\"], \"no-extra-semi\": [2]}' --fix *.js bin/*.js"
  },
  "sideEffects": false,
  "mode": "production"
}
